# Install and configure Bind to serve mDNS Service Records to other network-zones
- name: Install Bind
  ansible.builtin.apt:
    cache_valid_time: 43200
    pkg:
      - bind9
#TODO: Find a way to generate config files on remote hosts and then provide them to all other hosts.
#- name: Export Zone Update Key
#  builtin

- name: Get upstream Nameserver
  ansible.builtin.command:
    grep nameserver /etc/resolv.conf | cut -d' ' -f2
  register: nameserver
  failed_when: nameserver.stdout | regex_search('\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}') == ''
  changed_when: nameserver.rc == '0'

- name: Configure upstream Nameserver
  ansible.builtin.blockinfile:
    path: /etc/bind/named.conf.options
    insertbefore: "// forwarders {"
    block: |
      forwarders {
        {{ nameserver.stdout }};
      };
    marker: DNS-Forward
  notify: Restart bind

- name: Config Service Zone
  ansible.builtin.blockinfile:
    path:  /etc/bind/named.conf.local
    insertbefore: "// forwarders {"
    # Use rndc.key generated by installer to allow Zone-Updates
    block: |
      zone "services.{{ domain }}." {
        type master;
        file "db.services.{{ domain }}";
        allow-update { key rndc.key };
      };

      include rndc.key
    marker: Service-Zone
  notify: Restart bind

- name: Create Service Zone DB
  ansible.builtin.file:
    path: "/etc/bind/db.services.{{ domain }}"
    src: service-zone-template.j2
    mode: "0640"
    owner: bind
    group: bind
  notify: Restart bind

- name: Config reserved IP-Ranges (rfc 1918)
  ansible.builtin.lineinfile:
    path:  /etc/bind/named.conf.local
    regex: "^(?://)? include \"/etc/bind/zones.rfc1918\""
    line: "include \"/etc/bind/zones.rfc1918\""
  notify: Restart bind

- name: Comment out 192.168 private IP-Zone if used (rfc 1918)
  ansible.builtin.lineinfile:
    path:  /etc/bind/zones.rfc1918
    regex: "^(?://)? zone \"168\\.192"
    line: "//zone \"168.192.in-addr.arpa\" { type master; file \"/etc/bind/db.empty\"; };"
  when: nameserver.stdout starts_with(name,'192.168')
  notify: Restart bind

- name: Add Service NS to Open-Wrt Router
  ansible.builtin.include_tasks: add-service-ns-to-openwrt.yml
  when: "'router' in ansible['hosts']"

- name: Allow incoming DNS traffic
  community.general.ufw:
    app: DNS
    rule: allow
  notify: Reload ufw
